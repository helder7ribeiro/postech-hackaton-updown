apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}-deployment
  namespace: framegenerator
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: ${APP_NAME}
  template:
    metadata:
      labels:
        app: ${APP_NAME}
    spec:
      containers:
        - name: ${APP_NAME}
          image: ${DOCKER_USERNAME}/${APP_NAME}:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: POSTGRES_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_DATASOURCE_URL
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_DB
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_SESSION_TOKEN

            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_REGION

            - name: COGNITO_ISSUER_URI
              valueFrom:
                secretKeyRef:
                  name: cognito-config
                  key: COGNITO_ISSUER_URI

            - name: COGNITO_JWKS_URI
              valueFrom:
                secretKeyRef:
                  name: cognito-config
                  key: COGNITO_JWKS_URI

            - name: COGNITO_USER_POOL_ID
              valueFrom:
                secretKeyRef:
                  name: cognito-config
                  key: COGNITO_USER_POOL_ID

            - name: COGNITO_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: cognito-config
                  key: COGNITO_CLIENT_ID

          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
